//===-- Z80oldSubtarget.h - Define Subtarget for the Z80old ----------*- C++ -*--===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the Z80old specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_Z80old_Z80oldSUBTARGET_H
#define LLVM_LIB_TARGET_Z80old_Z80oldSUBTARGET_H

#include "Z80oldFrameLowering.h"
#include "Z80oldISelLowering.h"
#include "Z80oldInstrInfo.h"
#include "Z80oldSelectionDAGInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"

#define GET_SUBTARGETINFO_HEADER
#include "Z80oldGenSubtargetInfo.inc"

namespace llvm {
class Z80oldTargetMachine;

class Z80oldSubtarget final : public Z80oldGenSubtargetInfo {
  /// True if compiling for 24-bit, false for 16-bit.
  //bool In24BitMode;

  /// True if compiling for 16-bit, false for 24-bit.
  bool In16BitMode;

  /// True if target has undocumented z80old instructions.
  bool HasUndocOps;

  /// True if target has ez80old instructions.
  //bool HasEZ80oldOps;

  /// True if target has index half registers (HasUndocOps || HasEZ80oldOps).
  bool HasIdxHalfRegs;

  Z80oldSelectionDAGInfo TSInfo;
  // Ordering here is important. Z80oldInstrInfo initializes Z80oldRegisterInfo which
  // Z80oldTargetLowering needs.
  Z80oldInstrInfo InstrInfo;
  Z80oldTargetLowering TLInfo;
  Z80oldFrameLowering FrameLowering;

public:
  /// This constructor initializes the data members to match that
  /// of the specified triple.
  Z80oldSubtarget(const Triple &TT, StringRef CPU, StringRef FS,
               const Z80oldTargetMachine &TM);

  const Z80oldSelectionDAGInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }
  const Z80oldTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const Z80oldInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const Z80oldFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const Z80oldRegisterInfo *getRegisterInfo() const override {
    return &getInstrInfo()->getRegisterInfo();
  }

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

private:
  Z80oldSubtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS);
  void initializeEnvironment();
public:
  bool is16Bit() const { return In16BitMode; }
#if 0
  /// Is this ez80old (disregarding specific ABI / programming model)
  //bool is24Bit() const { return In24BitMode; }
  bool has16BitEZ80oldOps()  const { return false; }
  bool hasEZ80oldOps()       const { return HasEZ80oldOps;  }
#endif // 0
  bool hasUndocOps()      const { return HasUndocOps; }
  bool hasIndexHalfRegs() const { return HasIdxHalfRegs; }
};
} // End llvm namespace

#endif
